


# .abs__InterruptVectorTable
  00000000 0000019C .abs    InterruptVectorTable	(Vectors_c.obj)

# .abs_NVPROT_INIT
  0000040D 00000001 .abs    NVPROT_INIT	(Cpu_c.obj)

# .abs_NVOPT_INIT
  0000040F 00000001 .abs    NVOPT_INIT	(Cpu_c.obj)
#>00000400          ___heap_size (linker command file)
#>00000400          ___stack_size (linker command file)
#>00800000          ___RAM_ADDRESS (linker command file)
#>00002000          ___RAM_SIZE (linker command file)
#>00000000          ___FLASH_ADDRESS (linker command file)
#>00020000          ___FLASH_SIZE (linker command file)

# .userram

# .code

# .text
  00000410 00000030 .text   TI2_Init	(TI2_c.obj)
  00000440 00000022 .text   TI2_Interrupt	(TI2_c.obj)
  00000462 0000001C .text   TI1_Init	(TI1_c.obj)
  0000047E 00000022 .text   TI1_Interrupt	(TI1_c.obj)
  000004A0 0000002E .text   SetRatio	(PWM2_c.obj)
  000004CE 00000014 .text   PWM2_SetRatio16	(PWM2_c.obj)
  000004E2 00000012 .text   PWM2_Init	(PWM2_c.obj)
  000004F4 0000002E .text   SetRatio	(PWM1_c.obj)
  00000522 00000014 .text   PWM1_SetRatio16	(PWM1_c.obj)
  00000536 00000020 .text   PWM1_Init	(PWM1_c.obj)
  00000556 00000026 .text   M2m_PutVal	(M2m_c.obj)
  0000057C 00000026 .text   M1m_PutVal	(M1m_c.obj)
  000005A2 00000002 .text   Cpu_Interrupt	(Cpu_c.obj)
  000005A4 0000007C .text   __initialize_hardware	(Cpu_c.obj)
  00000620 00000124 .text   PE_low_level_init	(Cpu_c.obj)
  00000744 00000132 .text   AS2_SendBlock	(AS2_c.obj)
  00000876 000000D0 .text   AS2_InterruptRx	(AS2_c.obj)
  00000946 000000BE .text   AS2_InterruptTx	(AS2_c.obj)
  00000A04 00000030 .text   AS2_InterruptError	(AS2_c.obj)
  00000A34 0000006E .text   AS2_Init	(AS2_c.obj)
  00000AA2 000000D0 .text   AS1_InterruptRx	(AS1_c.obj)
  00000B72 000000BE .text   AS1_InterruptTx	(AS1_c.obj)
  00000C30 00000030 .text   AS1_InterruptError	(AS1_c.obj)
  00000C60 0000006E .text   AS1_Init	(AS1_c.obj)
  00000CCE 0000006E .text   AD1_Interrupt	(AD1_c.obj)
  00000D3C 0000000E .text   ClrSumV	(AD1_c.obj)
  00000D4A 0000002A .text   AD1_HWEnDi	(AD1_c.obj)
  00000D74 0000002A .text   AD1_Measure	(AD1_c.obj)
  00000D9E 00000034 .text   AD1_GetChanValue16	(AD1_c.obj)
  00000DD2 00000020 .text   AD1_Init	(AD1_c.obj)
  00000DF2 00000002 .text   __initialize_system	(startcf_c.obj)
  00000DF4 00000062 .text   __copy_rom_section	(startcf_c.obj)
  00000E56 00000046 .text   __copy_rom_sections_to_ram	(startcf_c.obj)
  00000E9C 00000004 .text   _ExitProcess	(startcf_c.obj)
  00000EA0 00000210 .text   clear_mem	(startcf_c.obj)
  000010B0 00000090 .text   _startup	(startcf_c.obj)
  00001140 0000013C .text   main	(main_c.obj)
  0000127C 00000002 .text   TI2_OnInterrupt	(Events_c.obj)
  0000127E 00000030 .text   TI1_OnInterrupt	(Events_c.obj)
  000012AE 00000002 .text   AD1_OnEnd	(Events_c.obj)
  000012B0 00000002 .text   AS1_OnError	(Events_c.obj)
  000012B2 00000002 .text   AS1_OnRxChar	(Events_c.obj)
  000012B4 00000002 .text   AS1_OnTxChar	(Events_c.obj)
  000012B6 00000002 .text   AS1_OnFullRxBuf	(Events_c.obj)
  000012B8 00000002 .text   AS1_OnFreeTxBuf	(Events_c.obj)
  000012BA 00000002 .text   AS2_OnError	(Events_c.obj)
  000012BC 00000002 .text   AS2_OnRxChar	(Events_c.obj)
  000012BE 00000002 .text   AS2_OnTxChar	(Events_c.obj)
  000012C0 00000002 .text   AS2_OnFullRxBuf	(Events_c.obj)
  000012C2 00000002 .text   AS2_OnFreeTxBuf	(Events_c.obj)
  000012C4 0000001C .text   __call_static_initializers	(librt.a cf_staticinitia)
  000012E0 0000002C .text   __destroy_global_chain	(librt.a cf_staticinitia)
  0000130C 0000003E .text   __ldivu__	(librt.a cf_runtime.o   )
  0000134A 00000034 .text   __ldiv__	(librt.a cf_runtime.o   )
  0000137E 0000000C .text   _ewl_exit	(librt.a abort_exit.o   )
  0000138C 00000002 .rodata Channels	(AD1_c.obj)
#>00001390          ___ROM_AT (linker command file)
#>00001390          ___DATA_ROM (linker command file)

# .data
#>00800000          ___DATA_RAM (linker command file)
#>00800000          __exception_table_start__ (linker command file)
# Exception index
  00800000 00000000         Exception Table Index	()
#>00800000          __exception_table_end__ (linker command file)
#>00800000          ___sinit__ (linker command file)
# Linker generated symbols
  00800000 00000004         static initializer	(linker generated)
#>00800004          __START_DATA (linker command file)
#>00800004          __END_DATA (linker command file)
#>00800004          __START_SDATA (linker command file)
  00800004 00000002 .sdata  dutyRight	(main_c.obj)
  00800006 00000001 .sdata  camOK	(main_c.obj)
#>00800008          __END_SDATA (linker command file)
#>00800008          ___DATA_END (linker command file)
#>00800008          __SDA_BASE (linker command file)

# .bss
#>00800008          ___BSS_START (linker command file)
#>00800008          __START_SBSS (linker command file)
  00800008 00000002 .sbss   ActualRatio	(PWM2_c.obj)
  0080000A 00000002 .sbss   ActualRatio	(PWM1_c.obj)
  0080000C 00000001 .sbss   SR_lock	(Cpu_c.obj)
  0080000D 00000001 .sbss   OnFreeTxBuf_semaphore	(AS2_c.obj)
  0080000E 00000064 .sbss   OutBuffer	(AS2_c.obj)
  00800072 00000001 .sbss   OutIndxW	(AS2_c.obj)
  00800073 00000001 .sbss   OutIndxR	(AS2_c.obj)
  00800074 00000001 .sbss   AS2_OutLen	(AS2_c.obj)
  00800075 00000064 .sbss   InpBuffer	(AS2_c.obj)
  008000D9 00000001 .sbss   InpIndxW	(AS2_c.obj)
  008000DA 00000001 .sbss   InpIndxR	(AS2_c.obj)
  008000DB 00000001 .sbss   AS2_InpLen	(AS2_c.obj)
  008000DC 00000001 .sbss   SerFlag	(AS2_c.obj)
  008000DD 00000001 .sbss   OnFreeTxBuf_semaphore	(AS1_c.obj)
  008000DE 00000064 .sbss   OutBuffer	(AS1_c.obj)
  00800142 00000001 .sbss   OutIndxW	(AS1_c.obj)
  00800143 00000001 .sbss   OutIndxR	(AS1_c.obj)
  00800144 00000001 .sbss   AS1_OutLen	(AS1_c.obj)
  00800145 00000064 .sbss   InpBuffer	(AS1_c.obj)
  008001A9 00000001 .sbss   InpIndxW	(AS1_c.obj)
  008001AA 00000001 .sbss   InpIndxR	(AS1_c.obj)
  008001AB 00000001 .sbss   AS1_InpLen	(AS1_c.obj)
  008001AC 00000001 .sbss   SerFlag	(AS1_c.obj)
  008001AE 00000004 .sbss   AD1_OutV	(AD1_c.obj)
  008001B2 00000001 .sbss   ModeFlg	(AD1_c.obj)
  008001B3 00000001 .sbss   SumChan	(AD1_c.obj)
  008001B4 00000001 .sbss   OutFlg	(AD1_c.obj)
  008001B6 00000002 .sbss   sharpRes	(main_c.obj)
  008001B8 00000002 .sbss   duty	(main_c.obj)
  008001BA 00000001 .sbss   M1m	(main_c.obj)
  008001BB 00000001 .sbss   M2m	(main_c.obj)
  008001BC 00000002 .sbss   dutyI	(main_c.obj)
  008001BE 00000002 .sbss   dutyD	(main_c.obj)
  008001C0 00000001 .sbss   sharpOK	(main_c.obj)
  008001C2 00000002 .sbss   send	(main_c.obj)
  008001C4 0000000A .sbss   rxBuffer	(main_c.obj)
#>008001D0          __END_SBSS (linker command file)
#>008001D0          __START_BSS (linker command file)
  008001D0 00000002 .bss    SR_reg	(Cpu_c.obj)
  008001D4 00000004 .bss    __global_destructor_chain	(librt.a cf_staticinitia)
#>008001D8          __END_BSS (linker command file)
#>008001D8          ___BSS_END (linker command file)

# .custom
#>008001D8          ___HEAP_START (linker command file)
#>008001D8          ___heap_addr (linker command file)
#>008005D8          ___HEAP_END (linker command file)
#>008005D8          ___SP_END (linker command file)
#>008009D8          ___SP_INIT (linker command file)
#>008005D8          ___mem_limit (linker command file)
#>00000010          ___stack_safety (linker command file)
#>008009D8          __SP_INIT (linker command file)
#>008009D8          ___SP_AFTER_RESET (linker command file)
#>00001398          _romp_at (linker command file)

# .romp
#>00001398          __S_romp (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  00000000 00000000 0000019C .abs__InterruptVectorTable abs__InterruptVectorTable
  0000040D 0000040D 00000001 .abs_NVPROT_INIT abs_NVPROT_INIT
  0000040F 0000040F 00000001 .abs_NVOPT_INIT abs_NVOPT_INIT
  00000410 00000410 00000000 .code      code
  00000410 00000410 00000F80 .text      code
  00800000 00800000 00000000 .userram   userram
  00800000 00001390 00000008 .data      userram
  00800008 00800008 000001D0 .bss       userram
  008001D8 008001D8 00000000 .custom    userram
  008001D8 00001398 00000018 .romp      userram

# Link start time: Wed May 30 16:44:07 2018
# Link end time: Wed May 30 16:44:08 2018

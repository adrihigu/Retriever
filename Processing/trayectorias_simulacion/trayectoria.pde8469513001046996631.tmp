
class Trajectory{
  ArrayList<PVector> vertices;
  float res = 2;
  float max_angle = PI/12;

  Trajectory(PVector car, PVector ball, PVector end){
    float end_dist = PVector.dist(ball, end);
    float end_res = res/end_dist;
    vertices = new ArrayList<PVector>();
    vertices.add(ball.copy());
    while(PVector.dist(vertices.get(vertices.size() -1), end) >= res){
      PVector last = vertices.get(vertices.size() -1);
      vertices.add(PVector.lerp(last, end, end_res));
    }
    PVector dir = PVector.sub(vertices.get(1), vertices.get(0));
    float angle_dir = (car.x - ball.x) > 0? 1 : -1;
    float angle = dir.heading() + angle_dir*max_angle;
    PVector jeje = PVector.fromAngle(angle).mult(sqrt(200)).add(vertices.get(0));
    println(degrees(angle));
    println(degrees(dir.heading()));
    vertices.add(0,jeje);
  }

  void display(){
    noFill();
    stroke(255);
    strokeWeight(1);
    beginShape();
    for(PVector v : vertices){
      vertex(v.x, v.y);
      //print(v);
    };
    endShape();
  }
}
